{"version":3,"sources":["helpers/drawPose.js","helpers/getAnglesFromPose.js","App.js","index.js"],"names":["COLOR","drawSegment","color","scale","ctx","ay","ax","by","bx","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","drawPoint","y","x","r","arc","Math","PI","fillStyle","fill","getAnglesFromPose","keypoints","find_angle","position","p0","p1","c","p0c","sqrt","pow","p1c","p0p1","acos","styleCanvas","marginLeft","marginRight","left","right","textAlign","zindex","width","height","styleTransparentCanvas","visibility","App","isMounted","useRef","webcamRef","canvasRef","useState","isLoading","setIsLoading","net","setNet","useEffect","current","posenet","architecture","outputStride","inputResolution","quantBytes","then","resp","detect","a","video","readyState","videoWidth","videoHeight","estimateSinglePose","flipHorizontal","pose","console","log","drawCanvas","getContext","minConfidence","i","length","keypoint","score","drawKeypoints","toTuple","forEach","drawSkeleton","className","ref","style","onClick","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"oTAwBMA,EAAQ,OAsBd,SAASC,EAAT,IAAyCC,EAAOC,EAAOC,GAAM,IAAD,mBAAtCC,EAAsC,KAAlCC,EAAkC,wBAA5BC,EAA4B,KAAxBC,EAAwB,KACxDJ,EAAIK,YACJL,EAAIM,OAAOJ,EAAKH,EAAOE,EAAKF,GAC5BC,EAAIO,OAAOH,EAAKL,EAAOI,EAAKJ,GAC5BC,EAAIQ,UAzBW,EA0BfR,EAAIS,YAAcX,EAClBE,EAAIU,SAmBR,SAASC,EAAUX,EAAKY,EAAGC,EAAGC,EAAGhB,GAC7BE,EAAIK,YACJL,EAAIe,IAAIF,EAAGD,EAAGE,EAAG,EAAG,EAAIE,KAAKC,IAC7BjB,EAAIkB,UAAYpB,EAChBE,EAAImB,O,sBC1EKC,EAAoB,SAAC,GAAqB,IAAlBC,EAAiB,EAAjBA,UAEjC,MAAO,CACHC,EAAWD,EAAU,GAAGE,SAAUF,EAAU,GAAGE,SAAUF,EAAU,GAAGE,UACtED,EAAWD,EAAU,GAAGE,SAAUF,EAAU,IAAIE,SAAUF,EAAU,GAAGE,UACvED,EAAWD,EAAU,GAAGE,SAAUF,EAAU,IAAIE,SAAUF,EAAU,GAAGE,UACvED,EAAWD,EAAU,GAAGE,SAAUF,EAAU,IAAIE,SAAUF,EAAU,GAAGE,UACvED,EAAWD,EAAU,GAAGE,SAAUF,EAAU,IAAIE,SAAUF,EAAU,IAAIE,UACxED,EAAWD,EAAU,GAAGE,SAAUF,EAAU,IAAIE,SAAUF,EAAU,IAAIE,UACxED,EAAWD,EAAU,IAAIE,SAAUF,EAAU,IAAIE,SAAUF,EAAU,IAAIE,UACzED,EAAWD,EAAU,IAAIE,SAAUF,EAAU,IAAIE,SAAUF,EAAU,IAAIE,YAW3ED,EAAa,SAACE,EAAGC,EAAGC,GACtB,IAAMC,EAAOX,KAAKY,KAAMZ,KAAKa,IAAIH,EAAEb,EAAEW,EAAGX,EAAE,GAAKG,KAAKa,IAAIH,EAAEd,EAAEY,EAAGZ,EAAE,IAC3DkB,EAAOd,KAAKY,KAAMZ,KAAKa,IAAIH,EAAEb,EAAEY,EAAGZ,EAAE,GAAKG,KAAKa,IAAIH,EAAEd,EAAEa,EAAGb,EAAE,IAC3DmB,EAAOf,KAAKY,KAAMZ,KAAKa,IAAIJ,EAAGZ,EAAEW,EAAGX,EAAE,GAAIG,KAAKa,IAAIJ,EAAGb,EAAEY,EAAGZ,EAAE,IAGlE,OAAqB,IAFCI,KAAKgB,MAAOF,EAAIA,EAAIH,EAAIA,EAAII,EAAKA,IAAO,EAAED,EAAIH,IAE1CX,KAAKC,ICjB7BgB,EAAc,CAClBV,SAAU,WACVW,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPC,UAAW,SACXC,OAAQ,EACRC,MAAO,IACPC,OAAQ,KAGJC,EAAyB,CAC7BC,WAAY,SACZT,WAAY,OACZC,YAAa,OACbC,KAAM,EACNC,MAAO,EACPG,MAAO,IACPC,OAAQ,KA4IKG,EAxII,WAEjB,IAAMC,EAAYC,kBAAQ,GACpBC,EAAYD,iBAAQ,MACpBE,EAAYF,iBAAQ,MAJH,EAMaG,oBAAS,GANtB,mBAMfC,EANe,KAMJC,EANI,OAOeF,mBAAS,MAPxB,gCAQCA,mBAAS,OARV,mBAQfG,EARe,KAQVC,EARU,KAWvBC,qBAAU,WACR,OAAO,WACHT,EAAUU,SAAU,KAEvB,IAEHD,qBAAW,WASTE,IAPsB,CAClBC,aAAc,WACdC,aAAc,GACdC,gBAAiB,CAAEnB,MAAO,IAAKC,OAAQ,KACvCmB,WAAY,IAIbC,MAAM,SAAAC,GACDjB,EAAUU,SACZF,EAAOS,QAGZ,IAGH,IAAMC,EAAM,uCAAG,kCAAAC,EAAA,yDAEoB,qBAAtBjB,EAAUQ,SACQ,OAAtBR,EAAUQ,SAC6B,IAAvCR,EAAUQ,QAAQU,MAAMC,YAChB,OAARd,EALM,wBAQDa,EAAQlB,EAAUQ,QAAQU,MAC1BE,EAAapB,EAAUQ,QAAQU,MAAME,WACrCC,EAAcrB,EAAUQ,QAAQU,MAAMG,YAG5CrB,EAAUQ,QAAQU,MAAMzB,MAAS2B,EACjCpB,EAAUQ,QAAQU,MAAMxB,OAAS2B,EAd1B,SAiBYhB,EAAIiB,mBAAmBJ,EAAO,CAC/CK,gBAAgB,IAlBX,OAiBDC,EAjBC,OAqBPpB,GAAa,GAEbqB,QAAQC,IAAKrD,EAAmBmD,IAChCC,QAAQC,IAAIF,GACZG,EAAWH,EAAMN,GAzBV,4CAAH,qDA6BNS,EAAa,SAACH,EAAMN,GACxB,IAAMjE,EAAMgD,EAAUO,QAAQoB,WAAW,MACzC3B,EAAUO,QAAQf,MAAQyB,EAAME,WAChCnB,EAAUO,QAAQd,OAASwB,EAAMG,YF3C9B,SAAuB/C,EAAWuD,EAAe5E,GACpD,IADqE,IAAZD,EAAW,uDAAH,EACxD8E,EAAI,EAAGA,EAAIxD,EAAUyD,OAAQD,IAAK,CACzC,IAAME,EAAW1D,EAAUwD,GAE3B,KAAIE,EAASC,MAAQJ,GAArB,CAHyC,MAO1BG,EAASxD,SACxBZ,EAAUX,EAR+B,EAOlCY,EACYb,EARsB,EAO/Bc,EACoBd,EAAO,EAAGH,KEqC1CqF,CAAcV,EAAI,UAAe,GAAKvE,GF5EnC,SAAsBqB,EAAWuD,EAAe5E,GAAiB,IAAZD,EAAW,uDAAH,EAIhE,SAASmF,EAAT,GACE,MAAO,CADgB,EAAPtE,EAAO,EAAJC,GAFjB2C,IAA6BnC,EAAWuD,GAM1BO,SAAQ,SAAC9D,GACzBxB,EACIqF,EAAQ7D,EAAU,GAAGE,UAAW2D,EAAQ7D,EAAU,GAAGE,UAAW3B,EAChEG,EAAOC,MEkEboF,CAAab,EAAI,UAAe,GAAKvE,IAsBvC,OACE,sBAAKqF,UAAU,wBAAf,UACE,mCACE,qDACA,0BAGF,iCAGInC,GACA,4CAGF,cAAC,IAAD,CACEoC,IAAMvC,EACNwC,MAAOtD,IAGT,wBACEqD,IAAMtC,EACNuC,MAAOtD,IAGT,qBAAKoD,UAAU,OAAOE,MAAO7C,IAE7B,wBACE2C,UAAU,kBACVG,QAlCgB,WACtBC,YAAW,WACT1B,MACC,OA6BC,2BASF,iFC7JN2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a557e3b5.chunk.js","sourcesContent":["import * as posenet from '@tensorflow-models/posenet';\r\n\r\n/**\r\n * @license\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\n/**\r\n * Draws a pose skeleton by looking up all adjacent keypoints/joints\r\n */\r\n\r\n \r\nconst COLOR = 'aqua';\r\nconst LINE_WIDTH = 2;\r\n\r\n\r\nexport function drawSkeleton(keypoints, minConfidence, ctx, scale = 1) {\r\n    const adjacentKeyPoints =\r\n        posenet.getAdjacentKeyPoints(keypoints, minConfidence);\r\n  \r\n    function toTuple({y, x}) {\r\n      return [y, x];\r\n    }\r\n  \r\n    adjacentKeyPoints.forEach((keypoints) => {\r\n      drawSegment(\r\n          toTuple(keypoints[0].position), toTuple(keypoints[1].position), COLOR,\r\n          scale, ctx);\r\n    });\r\n}\r\n\r\n/**\r\n * Draws a line on a canvas, i.e. a joint\r\n */\r\nfunction drawSegment([ay, ax], [by, bx], color, scale, ctx) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(ax * scale, ay * scale);\r\n    ctx.lineTo(bx * scale, by * scale);\r\n    ctx.lineWidth = LINE_WIDTH;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n  }\r\n\r\n/**\r\n * Draw pose keypoints onto a canvas\r\n */\r\nexport function drawKeypoints(keypoints, minConfidence, ctx, scale = 1) {\r\n    for (let i = 0; i < keypoints.length; i++) {\r\n      const keypoint = keypoints[i];\r\n  \r\n      if (keypoint.score < minConfidence) {\r\n        continue;\r\n      }\r\n  \r\n      const {y, x} = keypoint.position;\r\n      drawPoint(ctx, y * scale, x * scale, 3, COLOR);\r\n    }\r\n}\r\n\r\nfunction drawPoint(ctx, y, x, r, color) {\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n    ctx.fillStyle = color;\r\n    ctx.fill();\r\n}\r\n  ","\r\nexport const getAnglesFromPose = ( { keypoints } ) => {\r\n    \r\n    return [\r\n        find_angle(keypoints[5].position, keypoints[9].position, keypoints[7].position),    // Left wrist, elbow, shoulder\r\n        find_angle(keypoints[6].position, keypoints[10].position, keypoints[8].position),   // Right wrist, elbow, shoulder\r\n        find_angle(keypoints[7].position, keypoints[11].position, keypoints[5].position),    // Left elbow, shoulder, hip\r\n        find_angle(keypoints[8].position, keypoints[12].position, keypoints[6].position),    // Right elbow, shoulder, hip\r\n        find_angle(keypoints[5].position, keypoints[13].position, keypoints[11].position),    // Left shoulder, hip, knee\r\n        find_angle(keypoints[6].position, keypoints[14].position, keypoints[12].position),    // Right shoulder, hip, knee\r\n        find_angle(keypoints[11].position, keypoints[15].position, keypoints[13].position),    // Left hip, knee, ankle\r\n        find_angle(keypoints[12].position, keypoints[16].position, keypoints[14].position)    // Right hip, knee, ankle\r\n    ]\r\n}\r\n\r\n/**\r\n * Calculates the angle between two vectors pointing outward from one center\r\n *\r\n * @param p0 first point\r\n * @param p1 second point\r\n * @param c center point\r\n */\r\nconst find_angle = (p0,p1,c) => {\r\n    const p0c  = Math.sqrt( Math.pow(c.x-p0.x,2) + Math.pow(c.y-p0.y,2) );\r\n    const p1c  = Math.sqrt( Math.pow(c.x-p1.x,2) + Math.pow(c.y-p1.y,2) );\r\n    const p0p1 = Math.sqrt( Math.pow(p1.x-p0.x,2)+ Math.pow(p1.y-p0.y,2) );\r\n    const angleRadians =  Math.acos( (p1c*p1c+p0c*p0c-p0p1*p0p1)/(2*p1c*p0c) );\r\n\r\n    return (angleRadians*180)/Math.PI;\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react'\n\n// Tensorflow\nimport * as tf from '@tensorflow/tfjs'\nimport * as posenet from '@tensorflow-models/posenet';\nimport { drawKeypoints, drawSkeleton } from './helpers/drawPose'\n\n// WebCam\nimport Webcam from \"react-webcam\";\nimport { getAnglesFromPose } from './helpers/getAnglesFromPose';\n\nconst styleCanvas = {\n  position: \"absolute\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  left: 0,\n  right: 0,\n  textAlign: \"center\",\n  zindex: 9,\n  width: 640,\n  height: 480,\n}\n\nconst styleTransparentCanvas = {\n  visibility: \"hidden\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  left: 0,\n  right: 0,\n  width: 640,\n  height: 480,\n}\n\n//**************************************************************************\nexport const App = () => {\n  \n  const isMounted = useRef( true );\n  const webcamRef = useRef( null );\n  const canvasRef = useRef( null );\n\n  const [ isLoading, setIsLoading ] = useState(true);\n  const [ intervalId, setIntervalId ] = useState(null);\n  const [ net, setNet ] = useState(null);\n\n\n  useEffect(() => {\n    return () => {\n        isMounted.current = false;\n    }\n  }, []);\n\n  useEffect( () => {\n\n    const configuration = {\n        architecture: 'ResNet50',\n        outputStride: 16,\n        inputResolution: { width: 640, height: 480 },\n        quantBytes: 4\n    };\n\n    posenet.load( configuration )\n      .then( resp => {\n        if (isMounted.current)\n          setNet(resp);\n      })\n\n  }, []);\n\n\n  const detect = async () => {  \n    \n    if (typeof webcamRef.current !== \"undefined\" \n        && webcamRef.current !== null \n        && webcamRef.current.video.readyState === 4\n        && net !== null ){\n\n          // Get video properties\n          const video = webcamRef.current.video;\n          const videoWidth = webcamRef.current.video.videoWidth;\n          const videoHeight = webcamRef.current.video.videoHeight;\n          \n          // Set video properties\n          webcamRef.current.video.width  = videoWidth;\n          webcamRef.current.video.height = videoHeight;\n\n          // Make detections\n          const pose = await net.estimateSinglePose(video, {\n            flipHorizontal: false\n          });\n          \n          setIsLoading(false);\n\n          console.log( getAnglesFromPose( pose ) );\n          console.log(pose);\n          drawCanvas(pose, video);\n    }\n  }\n\n  const drawCanvas = (pose, video) => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    canvasRef.current.width = video.videoWidth;\n    canvasRef.current.height = video.videoHeight;\n    \n\n    drawKeypoints(pose[\"keypoints\"], 0.6, ctx);\n    drawSkeleton(pose[\"keypoints\"], 0.7, ctx);\n  }\n\n  // const handleDetection = () => {\n  //   if (intervalId === null)\n  //   {\n  //     setIntervalId(setInterval(() => {\n  //       detect();\n  //     }, 100))\n  //   }\n  //   else {\n  //     clearInterval(intervalId);\n  //     setIntervalId(null);\n  //   }\n  // }\n\n  const handleDetection = () => {\n    setTimeout(() => {\n      detect()\n    }, 1500);\n  }\n\n  return (\n    <div className=\"container text-center\">\n      <header>\n        <h1>Workout application</h1>\n        <hr/>\n      </header>\n\n      <main>\n        \n        {\n          isLoading &&\n          <h2>Loading...</h2>\n        }\n\n        <Webcam \n          ref={ webcamRef }\n          style={styleCanvas}\n        />\n\n        <canvas \n          ref={ canvasRef }\n          style={styleCanvas}\n        />\n\n        <div className=\"mb-5\" style={styleTransparentCanvas}/>\n\n        <button \n          className=\"btn btn-primary\"\n          onClick={ handleDetection }\n        >\n          Start/Stop\n        </button>\n        \n      </main>\n\n      <footer>\n        Made by Jesús González Álvarez\n      </footer>\n    </div>\n  )\n}\n//**************************************************************************\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}